plugins {
    id "java-library"
    id "io.qameta.allure" version "2.8.1"
}

repositories {
    mavenCentral()
}

def allureVersion = "2.16.1",
    selenideVersion = "5.24.4",
    junitVersion = "5.8.2",
    appiumVersion = "7.6.0",
    ownerVersion = "1.0.12",
    restAssuredVersion = "4.4.0",
    slf4jVersion = "1.7.32"


allure {
    version = allureVersion
    autoconfigure = true
    aspectjweaver = true
    configuration = "testImplementation"
    useJUnit5 {
        version = allureVersion
    }
}

dependencies {
    testImplementation(
            "com.codeborne:selenide:$selenideVersion",
            "io.qameta.allure:allure-selenide:$allureVersion",
            "io.appium:java-client:$appiumVersion",
            "org.aeonbits.owner:owner:$ownerVersion",
            "io.rest-assured:rest-assured:$restAssuredVersion",
            "org.junit.jupiter:junit-jupiter-api:$junitVersion"
    )
    testRuntimeOnly(
            "org.slf4j:slf4j-simple:$slf4jVersion",
            "org.junit.jupiter:junit-jupiter-engine:$junitVersion"
    )
}

tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8
}

tasks.withType(Test) {
    systemProperties(System.getProperties())
    useJUnitPlatform()

    testLogging {
        lifecycle {
            events "started", "skipped", "failed", "standard_error", "standard_out"
            exceptionFormat "short"
        }
    }
}

test {
    useJUnitPlatform() {
        excludeTags "browserstack"
    }
}

task browserstack(type: Test) {
    useJUnitPlatform {
        includeTags "browserstack"
    }
}